<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.guludai.market.domain.dao.ApproveSecurityRoleResourceEntityMapper" >
  <resultMap id="BaseResultMap" type="cn.guludai.market.domain.entity.ApproveSecurityRoleResourceEntity" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_code" property="roleCode" jdbcType="CHAR" />
    <result column="resource_code" property="resourceCode" jdbcType="CHAR" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="CHAR" />
    <result column="disk_status" property="diskStatus" jdbcType="CHAR" />
  </resultMap>
  
  <sql id="Base_Column_List">
	id,role_code,resource_code,version,create_time,update_time,data_status,disk_status
  </sql>
  
   <!-- 角色添加权限 -->
  <insert id="insert" parameterType="cn.guludai.market.domain.entity.ApproveSecurityRoleResourceEntity">
  	insert into approve_security_role_resource (id,role_code,resource_code,version,create_time,update_time,data_status,disk_status) 
  	 VALUES 
	(#{id},#{roleCode},#{resourceCode},#{version},#{createTime},#{updateTime},#{dataStatus},#{diskStatus})
  </insert>
  
  <!-- 通过角色编号册除角色权限 -->
  <update id="deleteByRoleCode" >
  	 UPDATE approve_security_role_resource rr SET rr.data_status = 'N' ,rr.version = rr.version +1 ,update_time = NOW() WHERE rr.role_code = #{roleCode}
  </update>
  <!-- 通过资源编号与角色编号查询是否在存数据 -->
  <select id="selectRoleResourceByResourceCodeAndRoleCode" resultType="java.lang.Integer">
  		SELECT count(1) FROM approve_security_role_resource r WHERE r.resource_code = #{resourceCode} 
		AND r.role_code = #{roleCode}
  </select>
  <!-- 添加角色权限 -->
  <update id="insertRoleResource"  >
  		UPDATE approve_security_role_resource r
	    SET r.data_status = 'Y' WHERE r.resource_code = #{resourceCode} AND r.role_code = #{roleCode}
  </update>
  
   	<!-- 通过角色编号，获取角色的资源 -->
 	<select id="getRoleResourcesByRocleCode"  resultMap="BaseResultMap" >
 		 SELECT 
			*
		 FROM approve_security_role_resource where  data_status = 'Y' AND disk_status = 'Y' AND role_code = #{roleCode}
 	</select>
	<!-- 册除角色权限 -->
	<update id="deleteRoleResourceByResourceCode">
		UPDATE approve_security_role_resource SET data_status = 'N', update_time = NOW(), version = version+1 WHERE  resource_code = #{resourceCode}
	</update>
</mapper>